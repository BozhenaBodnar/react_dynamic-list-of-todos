{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","types/Status.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","selectedTodoId","className","map","todo","id","completed","title","classNames","type","onClick","TodoFilter","status","onHandleSelect","query","onHandleInput","onClear","value","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","getTodos","Loader","TodoModal","currentTodo","OnCloseModal","useState","user","setUser","loadUser","useCallback","a","loadedUser","useEffect","href","email","name","App","setTodos","todoId","setTodoId","All","setStatus","setQuery","loadTodos","loadedTodos","visibleTodos","filter","lowerCaseTodoTitle","toLocaleLowerCase","lowerCaseQuery","includes","getFilteredTodos","Completed","Active","getTodosByStatus","find","event","target","getTodoStatus","length","ReactDOM","render","document","getElementById"],"mappings":"mRAUaA,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,aACAC,EACI,EADJA,eAEA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GACT,IAAQC,EAAyBD,EAAzBC,GAAIC,EAAqBF,EAArBE,UAAWC,EAAUH,EAAVG,MAEvB,OACE,qBAEE,UAAQ,OACRL,UAAWM,IACT,CACE,4BAA6BP,IAAmBI,IALtD,UASE,oBAAIH,UAAU,eAAd,SAA8BG,IAC9B,oBAAIH,UAAU,eAAd,SACGI,GACC,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWM,IACT,CAAE,mBAAoBF,GACtB,CAAE,mBAAoBA,IAH1B,SAMGC,MAGL,oBAAIL,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMV,EAAaK,IAJ9B,SAME,sBAAMH,UAAU,OAAhB,SACE,mBACEA,UAAWM,IACT,MACA,CACE,eAAgBP,IAAmBI,EACnC,SAAUJ,IAAmBI,cAvCpCA,YCzBNM,EAAwB,SAAC,GAM/B,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,cACAC,EACI,EADJA,QAEA,OACE,uBAAMd,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRe,MAAOL,EACPM,SAAUL,EAHZ,UAKE,wBAAQI,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGf,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACViB,YAAY,YACZF,MAAOH,EACPI,SAAUH,IAEZ,sBAAMb,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdY,GACC,sBAAMZ,UAAU,gBAAgBkB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRZ,KAAK,SACLP,UAAU,SACVQ,QAASM,aCxCvB,SAASM,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICxBKC,EDwBCC,EAAW,kBAAMZ,EAAY,WErB7Ba,G,MAAmB,kBAC9B,qBAAKjC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCMNkC,EAA6B,SAAC,GAGpC,IAFLC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEA,EAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KAEQpC,EAAyBgC,EAAzBhC,GAAIE,EAAqB8B,EAArB9B,MAAOD,EAAc+B,EAAd/B,UAEboC,EAAWC,sBAAW,sBAC1B,4BAAAC,EAAA,+EHMuCtB,EAAG,iBGJLjB,IAFrC,OAEUwC,EAFV,OAIIJ,EAAQI,GAJZ,gDAMIJ,EAAQ,MANZ,yDAQG,CAACD,IAON,OAJAM,qBAAU,WACRJ,MACC,IAGD,sBAAKxC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbsC,EAGA,sBAAKtC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYG,KAIZ,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS4B,OAIb,sBAAKpC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGK,IAGH,oBAAGL,UAAU,QAAQ,UAAQ,aAA7B,UACGI,EACG,wBAAQJ,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAG6C,KAAI,iBAAYP,EAAKQ,OAAxB,SACGR,EAAKS,gBAjCd,cAAC,EAAD,S,SFxCIhB,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KGaL,IAmDMiB,EAAgB,WAC3B,MAA0BX,mBAAiB,IAA3C,mBAAOxC,EAAP,KAAcoD,EAAd,KACA,EAA4BZ,mBAAS,GAArC,mBAAOa,EAAP,KAAeC,EAAf,KACA,EAA4Bd,mBAASN,EAAOqB,KAA5C,mBAAO1C,EAAP,KAAe2C,EAAf,KACA,EAA0BhB,mBAAS,IAAnC,mBAAOzB,EAAP,KAAc0C,EAAd,KAEMC,EAAYd,sBAAW,sBAC3B,4BAAAC,EAAA,+EAE8BV,IAF9B,OAEUwB,EAFV,OAIIP,EAASO,GAJb,gDAMIP,EAAS,IANb,yDAQG,CAACjB,IAGNY,qBAAU,WACRW,MACC,IAEH,IAgBME,EA7DwB,SAAC5D,EAAee,GAC9C,OAAO,YAAIf,GAAO6D,QAAO,SAAAxD,GACvB,IAAMyD,EAAqBzD,EAAKG,MAAMuD,oBAChCC,EAAiBjD,EAAMgD,oBAE7B,OAAOD,EAAmBG,SAASD,MAwDhBE,CA3ES,SAAClE,EAAea,GAC9C,OAAO,YAAIb,GAAO6D,QAAO,SAAAxD,GACvB,OAAIQ,IAAWqB,EAAOiC,UACb9D,EAAKE,UAGVM,IAAWqB,EAAOkC,QACZ/D,EAAKE,UAGRF,KAiE6BgE,CAAiBrE,EAAOa,GAASE,GAEjEuB,EAActC,EAAMsE,MAAK,SAAAjE,GAAI,OAAIgD,IAAWhD,EAAKC,MAMvD,OACE,qCACE,qBAAKH,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,OAAQA,EACRC,eAxBa,SAACyD,GAC1B,IAAQrD,EAAUqD,EAAMC,OAAhBtD,MAERsC,EAtFyB,SAAC9C,GAC5B,OAAQA,GACN,KAAKwB,EAAOkC,OACV,OAAOlC,EAAOkC,OAEhB,KAAKlC,EAAOiC,UACV,OAAOjC,EAAOiC,UAEhB,KAAKjC,EAAOqB,IACZ,QACE,OAAOrB,EAAOqB,KA4ENkB,CAAcvD,KAsBZH,MAAOA,EACPC,cApCY,SAACuD,GACzB,IAAQrD,EAAUqD,EAAMC,OAAhBtD,MAERuC,EAASvC,IAkCGD,QA/BK,WACjBwC,EAAS,SAkCD,qBAAKtD,UAAU,QAAf,SACGH,EAAM0E,OAAS,EACZ,cAAC,EAAD,IAEA,cAAC,EAAD,CACE1E,MAAO4D,EACP3D,aAAc,SAACC,GACboD,EAAUpD,IAEZA,eAAgBmD,aAQ7Bf,GACC,cAAC,EAAD,CACEA,YAAaA,EACbC,aAzCW,WACjBe,EAAU,UCxGdqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fe23456f.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: (selectedTodoId: number) => void,\n  selectedTodoId: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, completed, title } = todo;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={classNames(\n                {\n                  'has-background-info-light': selectedTodoId === id,\n                },\n              )}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames(\n                    { 'has-text-danger': !completed },\n                    { 'has-text-success': completed },\n                  )}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectedTodo(id)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames(\n                        'far',\n                        {\n                          'fa-eye-slash': selectedTodoId === id,\n                          'fa-eye': selectedTodoId !== id,\n                        },\n                      )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  status: Status,\n  onHandleSelect: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  query: string;\n  onHandleInput: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  onClear: () => void,\n};\n\nexport const TodoFilter: FC<Props> = ({\n  status,\n  onHandleSelect,\n  query,\n  onHandleInput,\n  onClear,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={onHandleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={onHandleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  currentTodo: Todo,\n  OnCloseModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  currentTodo,\n  OnCloseModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const { id, title, completed } = currentTodo;\n\n  const loadUser = useCallback(\n    async () => {\n      try {\n        const loadedUser = await getUser(id);\n\n        setUser(loadedUser);\n      } catch {\n        setUser(null);\n      }\n    }, [user],\n  );\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={OnCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Status } from './types/Status';\n\nexport const getTodoStatus = (type: string) => {\n  switch (type) {\n    case Status.Active:\n      return Status.Active;\n\n    case Status.Completed:\n      return Status.Completed;\n\n    case Status.All:\n    default:\n      return Status.All;\n  }\n};\n\nexport const getTodosByStatus = (todos: Todo[], status: Status) => {\n  return [...todos].filter(todo => {\n    if (status === Status.Completed) {\n      return todo.completed;\n    }\n\n    if (status === Status.Active) {\n      return !todo.completed;\n    }\n\n    return todo;\n  });\n};\n\nexport const getFilteredTodos = (todos: Todo[], query: string) => {\n  return [...todos].filter(todo => {\n    const lowerCaseTodoTitle = todo.title.toLocaleLowerCase();\n    const lowerCaseQuery = query.toLocaleLowerCase();\n\n    return lowerCaseTodoTitle.includes(lowerCaseQuery);\n  });\n};\n\nexport const filteredTodods = (type: string) => {\n  switch (type) {\n    case Status.Active:\n      return Status.Active;\n\n    case Status.Completed:\n      return Status.Completed;\n\n    case Status.All:\n    default:\n      return Status.All;\n  }\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [status, setStatus] = useState(Status.All);\n  const [query, setQuery] = useState('');\n\n  const loadTodos = useCallback(\n    async () => {\n      try {\n        const loadedTodos = await getTodos();\n\n        setTodos(loadedTodos);\n      } catch {\n        setTodos([]);\n      }\n    }, [getTodos],\n  );\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n  };\n\n  const clearInput = () => {\n    setQuery('');\n  };\n\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setStatus(getTodoStatus(value));\n  };\n\n  const visibleTodos = getFilteredTodos(getTodosByStatus(todos, status), query);\n\n  const currentTodo = todos.find(todo => todoId === todo.id);\n\n  const closeModal = () => {\n    setTodoId(0);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={status}\n                onHandleSelect={handleChangeSelect}\n                query={query}\n                onHandleInput={handleChangeInput}\n                onClear={clearInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length < 1\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={(selectedTodoId) => {\n                      setTodoId(selectedTodoId);\n                    }}\n                    selectedTodoId={todoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal\n          currentTodo={currentTodo}\n          OnCloseModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}